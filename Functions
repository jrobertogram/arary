import spacy

# Luckas
def palavras4Texto(texto, palavras):
  texto = texto.split()
  for plv1 in palavras:
    if plv1 not in texto:
      return False
  return True
	
print(palavras4Texto("como surgiu a filosofia na Grécia", ['surgiu', 'filosofia']))

# Emerson
def contarRepetiçõesPalavras(texto):
  lista = texto.split()
  repeticao = []
  for n in lista:
      repeticao.append(lista.count(n))
  return list(zip(lista, repeticao))

print(contarRepetiçõesPalavras('Meu nome é Benedito, qual é o seu Nome cara?'))

# Rodrigo
string = "como surgiu a filosofia na Grécia antiga" 
lista = [['nasceu',"oie", 'nascimento'], ['Grécia', 'Roma'], ["filosofia", 'matematica']]
quantidade = 1

def listaPalavras4Texto(lista, quan):
  l = []
  for c in range(len(lista)):
    cont = 0
    for i in lista[c]:
      if i in string:
        cont += 1
          
    if cont != quan:
      l.append('false')
    else:
      l.append('true')
  if 'false' in l:
    return False 
  return True

listaPalavras4Texto(lista,quantidade)

#Luckas
def wordClasses(texto):
  doc = nlp(texto) 
  nlp = spacy.load('pt_core_news_sm') 
  class_pt = {'ADJ': 'adjetivo', 'ADP' : 'aposição', 'ADV': 'adverbio', 'AUX': 'auxiliar', 'CCONJ': ['conjunção', 'coordenativa'], 'DET': 'determinante', 'INTJ' : 'interjeição', 'NOUN' : 'substantivo', 'NUM' : 'numeral', 'PART': 'partícula', 'PRON' : 'pronome', 'PROPN' : 'nome próprio', 'PUNCT' : 'pontuação', 'SCONJ' : 'conjunção subordinativa', 'SYM' : 'símbolo', 'VERB' : 'verbo', 'X' : 'outro'}
  word_With_Class = {}
  for token in doc:
      Class = token.tag_
      word_With_Class[token.text] = class_pt[Class]
  return word_With_Class

print(wordClasses("A galinha atravessou a rua para ganhar um milhão."))
